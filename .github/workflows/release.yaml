name: Release

on:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

  release:
    needs: [lint, test]
    runs-on: ubuntu-latest
    env:
      REGISTRY_ID: ${{ secrets.CONTAINER_REGISTRY_ID }}
      VERSION: ${{ github.run_number }}
      TOKEN: ${{ secrets.YC_OAUTH }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create release branch
        run: git checkout -b releases/${{ env.VERSION }} && git push origin releases/${{ env.VERSION }}

      - name: Build Docker image
        run: |
          docker build -t cr.yandex/${{ env.REGISTRY_ID }}/app:${{ env.VERSION }} .
          docker tag cr.yandex/${{ env.REGISTRY_ID }}/app:${{ env.VERSION }} cr.yandex/${{ env.REGISTRY_ID }}/app:${{ env.VERSION }}_latest

      - name: Authenticate in Docker
        run: |
          docker login --username oauth --password ${{ env.TOKEN }} cr.yandex

      - name: Push Docker image
        run: |
          docker push cr.yandex/${{ env.REGISTRY_ID }}/app:${{ env.VERSION }}
          docker push cr.yandex/${{ env.REGISTRY_ID }}/app:${{ env.VERSION }}_latest

      - name: Configure Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"


      - name: Create release tag
        run: git tag -a v${{ env.VERSION }} -m "Release ${{ env.VERSION }}" && git push origin v${{ env.VERSION }}

      - name: Create GitHub issue
        uses: actions-ecosystem/action-create-issue@v1
        with:
          title: Release ${{ env.VERSION }}
          body: |
            **Release Date:** ${{ github.event.created_at }}
            **Author:** ${{ github.actor }}
            **Version:** ${{ env.VERSION }}
            **Commits:**
            ${{ github.event.pull_request.commits }}
            **Docker Image:**
            cr.yandex/${{ env.REGISTRY_ID }}/app:${{ env.VERSION }}

